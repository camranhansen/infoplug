def parsePacket(packet):
	data=[]
	T = packet.split(";")
	for t in T:
		timestep=[]
		readings = t.split(",")
		#print readings
		if len(readings) == 2:
			for s in readings:
				# todo: error checking/handeling 
				if s != "":
					timestep.append(int(s))
			data.append(timestep)	
	return data

#position 0 is current, 1 is voltage
print parsePacket("502,0;501,0;505,0;505,0;501,0;501,0;500,0;496,0;498,0;500,0;496,0;492,0;493,0;497,0;495,0;492,0;492,0;476,0;471,0;474,0;476,0;476,0;474,0;478,0;484,0;486,0;488,0;495,0;497,0;498,0;499,0;503,0;501,0;502,0;504,0;505,0;504,0;502,0;505,0;507,0;506,0;505,0;508,0;508,0;508,0;512,0;513,2;509,0;509,0;514,0;518,1;514,1;515,1;516,0;529,3;536,5;536,5;537,5;532,5;531,4;533,5;532,5;523,4;516,1;517,1;515,0;511,0;511,1;509,0;505,0;503,0;508,0;507,0;504,0;502,0;505,0;505,0;501,0;502,0;502,0;499,0;503,0;500,0;498,0;497,0;494,0;498,0;496,0;494,0;492,0;494,0;485,0;473,0;475,0;475,0;473,0;476,0;481,0;482,0;483,0;487,0;495,0;494,0;497,0;499,0;498,0;500,0;501,0;506,0;503,0;499,0;504,0;506,0;506,0;505,0;507,0;506,0;506,0;511,1;513,1;510,0;509,1;512,0;516,1;515,1;514,1;515,1;516,0;519,2;537,5;538,5;535,5;531,4;535,5;536,5;529,4;524,4;523,2;516,0;515,1;513,1;513,0;509,0;505,0;509,0;510,0;504,0;503,0;505,0;506,0;504,0;503,0;502,0;501,0;500,0;501,0;503,0;497,0;494,0;522,3;533,4;536,4;538,5;534,5;532,5;530,5;529,4;525,3;521,3;516,1;512,0;508,0;510,0;512,0;508,0;505,0;506,0;506,0;505,0;506,0;505,0;502,0;500,0;504,0;506,0;500,0;496,0;500,0;501,0;496,0;498,0;498,0;494,0;493,0;497,0;496,0;490,0;471,0;473,0;476,0;476,0;477,0;478,0;479,0;484,0;489,0;495,0;493,0;494,0;502,0;502,0;499,0;501,0;503,0;503,0;503,0;505,0;505,0;502,0;505,0;509,0;509,0;505,0;507,0;511,0;510,1;511,0;512,1;512,0;511,0;514,0;519,1;517,1;512,1;532,3;540,5;536,5;534,5;533,5;531,4;529,4;528,4;526,4;517,1;510,0;511,0;515,0;510,0;506,0;508,0;508,0;506,0;507,0;506,0;504,0;501,0;503,0;507,0;502,0;498,0;499,0;498,0;497,0;499,0;497,0;494,0;493,0;497,0;497,0;493,0;491,0;477,0;474,0;474,0;474,0;475,0;476,0;479,0;483,0;488,0;489,0;491,0;498,0;500,0;498,0;498,0;502,0;502,0;501,0;505,0;505,0;502,0;503,0;507,0;508,0;506,0;505,0;510,0;508,0;511,0;512,1;508,0;511,0;513,0;518,1;516,1;512,1;515,0;530,3;540,4;535,5;536,6;535,4;531,4;531,4;531,5;526,4;517,2;513,0;501,0;501,0;504,0;506,0;505,0;505,0;506,0;505,0;508,0;511,1;512,0;507,0;507,1;515,0;513,0;510,0;512,0;514,0;513,0;515,0;534,4;537,4;532,4;535,4;535,5;531,5;529,4;526,3;523,2;517,1;514,0;514,1;509,0;506,0;508,0;510,0;507,0;503,0;506,0;507,0;505,0;505,0;504,0;502,0;501,0;503,0;504,0;498,0;496,0;500,0;502,0;497,0;495,0;497,0;496,0;494,0;497,0;485,0;472,0;473,0;476,0;479,0;478,0;479,0;482,0;485,0;491,0;496,0;498,0;496,0;498,0;504,0;504,0;501,0;502,0;503,0;504,0;504,0;506,0;505,0;503,0;506,0;510,0;509,0;505,1;509,0;513,0;510,2;511,1;512,1;513,0;512,0;515,1;518,2;520,3;533,4;535,4;537,5;535,5;532,5;529,4;528,3;525,3;521,3;518,1;512,0;508,0;509,0;511,0;508,0;504,0;506,0;506,0;506,0;506,0;505,0;503,0;501,0;504,0;506,0;500,0;496,0;500,0;502,0;496,0;497,0;497,0;496,0;493,0;495,0;496,0;490,0;473,0;473,0;477,0;476,0;477,0;479,0;480,0;484,0;489,0;496,0;493,0;494,0;501,0;502,0;501,0;501,0;502,0;504,0;503,0;505,0;505,0;503,0;505,0;508,0;509,0;505,0;508,0;511,0;493,0;492,0;488,0;473,0;473,0;474,0;474,0;476,0;479,0;482,0;482,0;485,0;494,0;495,0;497,0;499,0;499,0;498,0;502,0;506,0;503,0;500,0;503,0;507,0;506,0;505,0;506,0;507,0;507,0;510,0;512,1;508,0;509,0;512,0;517,1;513,1;513,1;515,1;516,1;519,2;537,4;538,5;535,5;532,5;533,5;534,5;530,5;525,3;522,2;516,1;514,1;512,1;512,0;507,0;506,0;508,0;509,0;505,0;501,0;506,0;507,0;504,0;502,0;502,0;502,0;500,0;501,0;502,0;497,0;496,0;500,0;498,0;495,0;493,0;495,0;494,0;493,0;476,0;473,0;473,0;474,0;479,0;480,0;479,0;482,0;487,0;493,0;497,0;497,0;498,0;498,0;500,0;504,0;503,0;500,0;502,0;505,0;505,0;504,0;506,0;507,0;504,0;508,0;512,0;512,0;507,0;508,0;516,1;512,1;511,1;512,1;513,0;515,1;516,0;533,4;536,5;532,4;534,4;535,5;532,5;528,4;526,3;524,3;518,1;514,0;513,0;509,0;508,0;508,0;510,0;506,0;504,0;506,0;507,0;505,0;504,0;503,0;502,0;501,0;503,0;504,0;498,0;497,0;498,0;501,0;497,0;495,0;496,0;495,0;495,0;495,0;483,0;472,0;473,0;477,0;479,0;477,0;479,0;482,0;")